totalvotes<- c()
## loop through each part of list
for(i in 1:83){
a<- as.data.frame(cbs[[i]][4][1])
t<- as.numeric(gsub(",", "", (a[1,1])))# get rid of comma in results
trumpvote[i]<- t
b<- as.numeric(gsub(",", "", (a[2,1])))
bidenvote[i]<- b
totalvotes[i]<- t + b
}
a[2,1]
v1<- as.data.frame(cbind(trumpvote, "Republican",totalvotes))
v2<- as.data.frame(cbind(bidenvote, "Democrat", totalvotes))
colnames(v1)[1]<- "Votes"
colnames(v2)[1]<- "Votes"
cbs_data<- rbind(v1,v2)
colnames(cbs_data)[2]<- "Party"
write.csv(cbs_data, paste0("/Users/jessesmac/Downloads/", Sys.time(),"cbsdata.csv"))
Sys.sleep(1800)
}
for(j in 1:20){
## create lists
cbs<- url %>%
read_html() %>%
html_table()
### empty vectors to fill data frames
trumpvote<- c()
bidenvote<- c()
totalvotes<- c()
## loop through each part of list
for(i in 1:83){
a<- as.data.frame(cbs[[i]][4][1])
t<- as.numeric(gsub(",", "", (a[1,1])))# get rid of comma in results
trumpvote[i]<- t
b<- as.numeric(gsub(",", "", (a[2,1])))
bidenvote[i]<- b
totalvotes[i]<- t + b
}
a[2,1]
v1<- as.data.frame(cbind(trumpvote, "Republican",totalvotes))
v2<- as.data.frame(cbind(bidenvote, "Democrat", totalvotes))
colnames(v1)[1]<- "Votes"
colnames(v2)[1]<- "Votes"
cbs_data<- rbind(v1,v2)
colnames(cbs_data)[2]<- "Party"
write.csv(cbs_data, paste0("/Users/jessesmac/Downloads/", Sys.time(),"cbsdata.csv"))
print(i)
Sys.sleep(1800)
}
## load in URL
url <- "https://abcnews.go.com/Elections/michigan-county-presidential-election-results-2020"
for(j in 1:20){
## create lists
cbs<- url %>%
read_html() %>%
html_table()
### empty vectors to fill data frames
trumpvote<- c()
bidenvote<- c()
totalvotes<- c()
## loop through each part of list
for(i in 1:83){
a<- as.data.frame(cbs[[i]][4][1])
t<- as.numeric(gsub(",", "", (a[1,1])))# get rid of comma in results
trumpvote[i]<- t
b<- as.numeric(gsub(",", "", (a[2,1])))
bidenvote[i]<- b
totalvotes[i]<- t + b
}
a[2,1]
v1<- as.data.frame(cbind(trumpvote, "Republican",totalvotes))
v2<- as.data.frame(cbind(bidenvote, "Democrat", totalvotes))
colnames(v1)[1]<- "Votes"
colnames(v2)[1]<- "Votes"
cbs_data<- rbind(v1,v2)
colnames(cbs_data)[2]<- "Party"
write.csv(cbs_data, paste0("/Users/jessesmac/Downloads/", Sys.time(),"cbsdata.csv"))
print(i)
Sys.sleep(1800)
}
a
b<- as.data.frame(cbs[[i]][4])
b
b<- as.data.frame(cbs[[i]])
b
cbs[2]
cbs[82]
t_result<- b$`Total Votes`[b$Candidate == "Donald Trump*"]
t_result
t<- as.numeric(gsub(",", "", t_result))
t
## load in URL
url <- "https://abcnews.go.com/Elections/michigan-county-presidential-election-results-2020"
for(j in 1:20){
## create lists
cbs<- url %>%
read_html() %>%
html_table()
### empty vectors to fill data frames
trumpvote<- c()
bidenvote<- c()
totalvotes<- c()
## loop through each part of list
for(i in 1:83){
a<- as.data.frame(cbs[[i]][4][1])
b<- as.data.frame(cbs[[i]])
t_result<- b$`Total Votes`[b$Candidate == "Donald Trump*"]
b_result<- b$`Total Votes`[b$Candidate == "Joe Biden"]
t<- as.numeric(gsub(",", "", t_result))# get rid of comma in results
trumpvote[i]<- t
b<- as.numeric(gsub(",", "", b_result))
bidenvote[i]<- b
totalvotes[i]<- t + b
}
a[2,1]
v1<- as.data.frame(cbind(trumpvote, "Republican",totalvotes))
v2<- as.data.frame(cbind(bidenvote, "Democrat", totalvotes))
colnames(v1)[1]<- "Votes"
colnames(v2)[1]<- "Votes"
cbs_data<- rbind(v1,v2)
colnames(cbs_data)[2]<- "Party"
write.csv(cbs_data, paste0("/Users/jessesmac/Downloads/", Sys.time(),"cbsdata.csv"))
print(i)
}
b_result
### empty vectors to fill data frames
trumpvote<- c()
bidenvote<- c()
totalvotes<- c()
## loop through each part of list
for(i in 1:83){
b<- as.data.frame(cbs[[i]])
t_result<- b$`Total Votes`[b$Candidate == "Donald Trump*"]
b_result<- b$`Total Votes`[b$Candidate == "Joe Biden"]
t<- as.numeric(gsub(",", "", t_result))# get rid of comma in results
trumpvote[i]<- t
b<- as.numeric(gsub(",", "", b_result))
bidenvote[i]<- b
totalvotes[i]<- t + b
}
v1<- as.data.frame(cbind(trumpvote, "Republican",totalvotes))
v2<- as.data.frame(cbind(bidenvote, "Democrat", totalvotes))
colnames(v1)[1]<- "Votes"
colnames(v2)[1]<- "Votes"
cbs_data<- rbind(v1,v2)
colnames(cbs_data)[2]<- "Party"
View(cbs_data)
write.csv(cbs_data, paste0("/Users/jessesmac/Downloads/", Sys.time(),"cbsdata.csv"))
## create lists
cbs<- url %>%
read_html() %>%
html_table()
### empty vectors to fill data frames
trumpvote<- c()
bidenvote<- c()
totalvotes<- c()
## loop through each part of list
for(i in 1:83){
b<- as.data.frame(cbs[[i]])
t_result<- b$`Total Votes`[b$Candidate == "Donald Trump*"]
b_result<- b$`Total Votes`[b$Candidate == "Joe Biden"]
t<- as.numeric(gsub(",", "", t_result))# get rid of comma in results
trumpvote[i]<- t
b<- as.numeric(gsub(",", "", b_result))
bidenvote[i]<- b
totalvotes[i]<- t + b
}
v1<- as.data.frame(cbind(trumpvote, "Republican",totalvotes))
v2<- as.data.frame(cbind(bidenvote, "Democrat", totalvotes))
colnames(v1)[1]<- "Votes"
colnames(v2)[1]<- "Votes"
cbs_data<- rbind(v1,v2)
colnames(cbs_data)[2]<- "Party"
write.csv(cbs_data, paste0("/Users/jessesmac/Downloads/", Sys.time(),"cbsdata.csv"))
## create lists
abc<- url %>%
read_html() %>%
html_table()
### empty vectors to fill data frames
trumpvote<- c()
bidenvote<- c()
totalvotes<- c()
## loop through each part of list
for(i in 1:83){
b<- as.data.frame(abc[[i]])
t_result<- b$`Total Votes`[b$Candidate == "Donald Trump*"]
b_result<- b$`Total Votes`[b$Candidate == "Joe Biden"]
t<- as.numeric(gsub(",", "", t_result))# get rid of comma in results
trumpvote[i]<- t
b<- as.numeric(gsub(",", "", b_result))
bidenvote[i]<- b
totalvotes[i]<- t + b
}
v1<- as.data.frame(cbind(trumpvote, "Republican",totalvotes))
v2<- as.data.frame(cbind(bidenvote, "Democrat", totalvotes))
colnames(v1)[1]<- "Votes"
colnames(v2)[1]<- "Votes"
abc_data<- rbind(v1,v2)
colnames(abc_data)[2]<- "Party"
write.csv(abc_data, paste0("/Users/jessesmac/Downloads/", Sys.time(),"abcdata.csv"))
## create lists
cbs<- url %>%
read_html() %>%
html_table()
### empty vectors to fill data frames
trumpvote<- c()
bidenvote<- c()
totalvotes<- c()
## loop through each part of list
for(i in 1:83){
b<- as.data.frame(cbs[[i]])
t_result<- b$`Total Votes`[b$Candidate == "Donald Trump*"]
b_result<- b$`Total Votes`[b$Candidate == "Joe Biden"]
t<- as.numeric(gsub(",", "", t_result))# get rid of comma in results
trumpvote[i]<- t
b<- as.numeric(gsub(",", "", b_result))
bidenvote[i]<- b
totalvotes[i]<- t + b
}
v1<- as.data.frame(cbind(trumpvote, "Republican",totalvotes))
v2<- as.data.frame(cbind(bidenvote, "Democrat", totalvotes))
colnames(v1)[1]<- "Votes"
colnames(v2)[1]<- "Votes"
cbs_data<- rbind(v1,v2)
colnames(cbs_data)[2]<- "Party"
write.csv(cbs_data, paste0("/Users/jessesmac/Downloads/", Sys.time(),"cbsdata.csv"))
## create lists
cbs<- url %>%
read_html() %>%
html_table()
### empty vectors to fill data frames
trumpvote<- c()
bidenvote<- c()
totalvotes<- c()
## loop through each part of list
for(i in 1:83){
b<- as.data.frame(cbs[[i]])
t_result<- b$`Total Votes`[b$Candidate == "Donald Trump*"]
b_result<- b$`Total Votes`[b$Candidate == "Joe Biden"]
t<- as.numeric(gsub(",", "", t_result))# get rid of comma in results
trumpvote[i]<- t
b<- as.numeric(gsub(",", "", b_result))
bidenvote[i]<- b
totalvotes[i]<- t + b
}
v1<- as.data.frame(cbind(trumpvote, "Republican",totalvotes))
v2<- as.data.frame(cbind(bidenvote, "Democrat", totalvotes))
colnames(v1)[1]<- "Votes"
colnames(v2)[1]<- "Votes"
cbs_data<- rbind(v1,v2)
colnames(cbs_data)[2]<- "Party"
write.csv(cbs_data, paste0("/Users/jessesmac/Downloads/", Sys.time(),"cbsdata.csv"))
## create lists
cbs<- url %>%
read_html() %>%
html_table()
### empty vectors to fill data frames
trumpvote<- c()
bidenvote<- c()
totalvotes<- c()
## loop through each part of list
for(i in 1:83){
b<- as.data.frame(cbs[[i]])
t_result<- b$`Total Votes`[b$Candidate == "Donald Trump*"]
b_result<- b$`Total Votes`[b$Candidate == "Joe Biden"]
t<- as.numeric(gsub(",", "", t_result))# get rid of comma in results
trumpvote[i]<- t
b<- as.numeric(gsub(",", "", b_result))
bidenvote[i]<- b
totalvotes[i]<- t + b
}
v1<- as.data.frame(cbind(trumpvote, "Republican",totalvotes))
v2<- as.data.frame(cbind(bidenvote, "Democrat", totalvotes))
colnames(v1)[1]<- "Votes"
colnames(v2)[1]<- "Votes"
cbs_data<- rbind(v1,v2)
colnames(cbs_data)[2]<- "Party"
write.csv(cbs_data, paste0("/Users/jessesmac/Downloads/", Sys.time(),"cbsdata.csv"))
## create lists
cbs<- url %>%
read_html() %>%
html_table()
### empty vectors to fill data frames
trumpvote<- c()
bidenvote<- c()
totalvotes<- c()
## loop through each part of list
for(i in 1:83){
b<- as.data.frame(cbs[[i]])
t_result<- b$`Total Votes`[b$Candidate == "Donald Trump*"]
b_result<- b$`Total Votes`[b$Candidate == "Joe Biden"]
t<- as.numeric(gsub(",", "", t_result))# get rid of comma in results
trumpvote[i]<- t
b<- as.numeric(gsub(",", "", b_result))
bidenvote[i]<- b
totalvotes[i]<- t + b
}
v1<- as.data.frame(cbind(trumpvote, "Republican",totalvotes))
v2<- as.data.frame(cbind(bidenvote, "Democrat", totalvotes))
colnames(v1)[1]<- "Votes"
colnames(v2)[1]<- "Votes"
cbs_data<- rbind(v1,v2)
colnames(cbs_data)[2]<- "Party"
write.csv(cbs_data, paste0("/Users/jessesmac/Downloads/", Sys.time(),"cbsdata.csv"))
## create lists
cbs<- url %>%
read_html() %>%
html_table()
### empty vectors to fill data frames
trumpvote<- c()
bidenvote<- c()
totalvotes<- c()
## loop through each part of list
for(i in 1:83){
b<- as.data.frame(cbs[[i]])
t_result<- b$`Total Votes`[b$Candidate == "Donald Trump*"]
b_result<- b$`Total Votes`[b$Candidate == "Joe Biden"]
t<- as.numeric(gsub(",", "", t_result))# get rid of comma in results
trumpvote[i]<- t
b<- as.numeric(gsub(",", "", b_result))
bidenvote[i]<- b
totalvotes[i]<- t + b
}
v1<- as.data.frame(cbind(trumpvote, "Republican",totalvotes))
v2<- as.data.frame(cbind(bidenvote, "Democrat", totalvotes))
colnames(v1)[1]<- "Votes"
colnames(v2)[1]<- "Votes"
cbs_data<- rbind(v1,v2)
colnames(cbs_data)[2]<- "Party"
write.csv(cbs_data, paste0("/Users/jessesmac/Downloads/", Sys.time(),"cbsdata.csv"))
.2*	(3044696+2553843)
1119708*.65 + 2553843
1119708*.35 + 3044696
1119708*.75 + 2553843
1119708*.25 + 3044696
1119708*.7 + 2553843
1119708*.3 + 3044696
1119708*.72 + 2553843
1119708*.28 + 3044696
1119708*.71 + 2553843
1119708*.29 + 3044696
1119708*.28 + 3044696
1119708*.72 + 2553843
## create lists
cbs<- url %>%
read_html() %>%
html_table()
### empty vectors to fill data frames
trumpvote<- c()
bidenvote<- c()
totalvotes<- c()
## loop through each part of list
for(i in 1:83){
b<- as.data.frame(cbs[[i]])
t_result<- b$`Total Votes`[b$Candidate == "Donald Trump*"]
b_result<- b$`Total Votes`[b$Candidate == "Joe Biden"]
t<- as.numeric(gsub(",", "", t_result))# get rid of comma in results
trumpvote[i]<- t
b<- as.numeric(gsub(",", "", b_result))
bidenvote[i]<- b
totalvotes[i]<- t + b
}
v1<- as.data.frame(cbind(trumpvote, "Republican",totalvotes))
v2<- as.data.frame(cbind(bidenvote, "Democrat", totalvotes))
colnames(v1)[1]<- "Votes"
colnames(v2)[1]<- "Votes"
cbs_data<- rbind(v1,v2)
colnames(cbs_data)[2]<- "Party"
write.csv(cbs_data, paste0("/Users/jessesmac/Downloads/", Sys.time(),"cbsdata.csv"))
.21*	(3044696+2553843)
1119708*.72 + 2553843
1119708*.28 + 3044696
1119708*.7 + 2553843
1119708*.3 + 3044696
1119708*.71 + 2553843
1119708*.29 + 3044696
1119708*.72 + 2553843
1119708*.28 + 3044696
1119708*.715 + 2553843
1119708*(1-.715) + 3044696
1119708*.718 + 2553843
1119708*(1-.718) + 3044696
1119708*.719 + 2553843
1119708*(1-.719) + 3044696
1119708*.7195 + 2553843
1119708*(1-.7195) + 3044696
biden<- 2385255
trump<- 2385255
biden<- 2283418
trump+biden
(trump+biden) * pctleft
pctleft<- (.08)
(trump+biden) * pctleft
botesleft<- (trump+biden) * pctleft
votesleft<- (trump+biden) * pctleft
trump + .3*votesleft
biden + .7*votesleft
trump + .4*votesleft
biden + .6*votesleft
trump + .35*votesleft
biden + .65*votesleft
## create lists
cbs<- url %>%
read_html() %>%
html_table()
### empty vectors to fill data frames
trumpvote<- c()
bidenvote<- c()
totalvotes<- c()
## loop through each part of list
for(i in 1:83){
b<- as.data.frame(cbs[[i]])
t_result<- b$`Total Votes`[b$Candidate == "Donald Trump*"]
b_result<- b$`Total Votes`[b$Candidate == "Joe Biden"]
t<- as.numeric(gsub(",", "", t_result))# get rid of comma in results
trumpvote[i]<- t
b<- as.numeric(gsub(",", "", b_result))
bidenvote[i]<- b
totalvotes[i]<- t + b
}
v1<- as.data.frame(cbind(trumpvote, "Republican",totalvotes))
v2<- as.data.frame(cbind(bidenvote, "Democrat", totalvotes))
colnames(v1)[1]<- "Votes"
colnames(v2)[1]<- "Votes"
cbs_data<- rbind(v1,v2)
colnames(cbs_data)[2]<- "Party"
write.csv(cbs_data, paste0("/Users/jessesmac/Downloads/", Sys.time(),"cbsdata.csv"))
.2*	(3044696+2553843)
1119708*(1-.7195) + 3044696
trump<- 2385255
biden<- 2283418
pctleft<- (.08)
votesleft<- (trump+biden) * pctleft
trump + .35*votesleft
biden + .65*votesleft
## create lists
cbs<- url %>%
read_html() %>%
html_table()
### empty vectors to fill data frames
trumpvote<- c()
bidenvote<- c()
totalvotes<- c()
## loop through each part of list
for(i in 1:83){
b<- as.data.frame(cbs[[i]])
t_result<- b$`Total Votes`[b$Candidate == "Donald Trump*"]
b_result<- b$`Total Votes`[b$Candidate == "Joe Biden"]
t<- as.numeric(gsub(",", "", t_result))# get rid of comma in results
trumpvote[i]<- t
b<- as.numeric(gsub(",", "", b_result))
bidenvote[i]<- b
totalvotes[i]<- t + b
}
v1<- as.data.frame(cbind(trumpvote, "Republican",totalvotes))
v2<- as.data.frame(cbind(bidenvote, "Democrat", totalvotes))
colnames(v1)[1]<- "Votes"
colnames(v2)[1]<- "Votes"
cbs_data<- rbind(v1,v2)
colnames(cbs_data)[2]<- "Party"
write.csv(cbs_data, paste0("/Users/jessesmac/Downloads/", Sys.time(),"cbsdata.csv"))
###3 alcona county analysis #####
file.choose()
historical<- read.csv("/Users/jessesmac/Downloads/GitHub-Tutorial-master/election_night2020/context/historical_elections/countypres_2000-2016long.csv")
View(historical)
## create lists
cbs<- url %>%
read_html() %>%
html_table()
### empty vectors to fill data frames
trumpvote<- c()
bidenvote<- c()
totalvotes<- c()
## loop through each part of list
for(i in 1:83){
b<- as.data.frame(cbs[[i]])
t_result<- b$`Total Votes`[b$Candidate == "Donald Trump*"]
b_result<- b$`Total Votes`[b$Candidate == "Joe Biden"]
t<- as.numeric(gsub(",", "", t_result))# get rid of comma in results
trumpvote[i]<- t
b<- as.numeric(gsub(",", "", b_result))
bidenvote[i]<- b
totalvotes[i]<- t + b
}
v1<- as.data.frame(cbind(trumpvote, "Republican",totalvotes))
v2<- as.data.frame(cbind(bidenvote, "Democrat", totalvotes))
colnames(v1)[1]<- "Votes"
colnames(v2)[1]<- "Votes"
cbs_data<- rbind(v1,v2)
colnames(cbs_data)[2]<- "Party"
write.csv(cbs_data, paste0("/Users/jessesmac/Downloads/", Sys.time(),"cbsdata.csv"))
View(historical)
historical<- historical[historical$party == "republican",]
historical<- historical[historical$party == "republican" & historical$state = "Michigan",]
historical<- historical[historical$party == "republican" & historical$state == "Michigan",]
#### making graphs fo antrim ##
historical<- read.csv("/Users/jessesmac/Downloads/GitHub-Tutorial-master/election_night2020/context/historical_elections/countypres_2000-2016long.csv")
historical<- historical[historical$party == "republican" & historical$state == "Michigan",]
historical<- historical[complete.cases(historical)]
historical<- historical[complete.cases(historical),]
historical<- historical[historical$party == "republican" & historical$state == "Michigan" & historical$year == 2016,]
historical$rep_precent16<- historical$candidatevotes/ historical$totalvotes
historical$rep_precent16
file.choose()
data_2020<- read.csv("/Users/jessesmac/Downloads/2020-11-04 15:58:47cbsdata.csv")
data_2020<- read.csv("/Users/jessesmac/Downloads/2020-11-04 15:58:47cbsdata.csv", stringsAsFactors = F)
View(data_2020)
data_2020<- data_2020[data_2020$Party == "Republican",]
data_2020$rep_percent20<- data_2020$Votes / data_2020$totalvotes
data_2020$rep_percent20
plot(x = historical$rep_precent16,y = data_2020$rep_percent20)
plot(x = historical$rep_precent16,y = data_2020$rep_percent20)
